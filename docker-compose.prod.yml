services:
  postgres:
    env_file:
      - .env.prod
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: -N 1024 -B 4096MB
  minio-caddy:
    image: ghcr.io/picosh/pico/caddy:latest
    restart: always
    env_file:
      - .env.prod
    environment:
      APP_DOMAIN: pico.sh
      APP_EMAIL: ${MINIO_EMAIL:-hello@pico.sh}
    volumes:
      - ${MINIO_CADDYFILE}:/etc/caddy/Caddyfile
      - ./data/minio-caddy/data:/data
      - ./data/minio-caddy/config:/config
    ports:
      - "80:80"
      - "443:443"
    profiles:
      - db
      - all
  minio:
    env_file:
      - .env.prod
    volumes:
      - ./data/minio-data:/data
  pipemgr:
    env_file:
      - .env.prod
    volumes:
      - ./data/pipemgr/data/term_info_ed25519:/key:ro
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1024m"
  imgproxy:
    env_file:
      - .env.prod
    volumes:
      - ./data/storage:/storage
    networks:
      prose:
  pastes-caddy:
    image: ghcr.io/picosh/pico/caddy:latest
    restart: always
    networks:
      - pastes
    env_file:
      - .env.prod
    environment:
      APP_DOMAIN: ${PASTES_DOMAIN:-pastes.sh}
      APP_EMAIL: ${PASTES_EMAIL:-hello@pico.sh}
    volumes:
      - ${PASTES_CADDYFILE}:/etc/caddy/Caddyfile
      - ./data/pastes-caddy/data:/data
      - ./data/pastes-caddy/config:/config
    ports:
      - "${PASTES_HTTPS_V4:-443}:443"
      - "${PASTES_HTTP_V4:-80}:80"
      - "${PASTES_HTTPS_V6:-[::1]:443}:443"
      - "${PASTES_HTTP_V6:-[::1]:80}:80"
    profiles:
      - pastes
      - caddy
      - all
  pastes-web:
    dns: 1.1.1.1
    networks:
      pastes:
        aliases:
          - web
    env_file:
      - .env.prod
    volumes:
      - ./data/pastes-ssh/data:/app/ssh_data
  pastes-ssh:
    networks:
      pastes:
        aliases:
          - ssh
    env_file:
      - .env.prod
    volumes:
      - ./data/pastes-ssh/data:/app/ssh_data
    ports:
      - "${PASTES_SSH_V4:-22}:2222"
      - "${PASTES_SSH_V6:-[::1]:22}:2222"
  pipe-caddy:
    image: ghcr.io/picosh/pico/caddy:latest
    restart: always
    networks:
      - pipe
    env_file:
      - .env.prod
    environment:
      APP_DOMAIN: ${PIPE_DOMAIN:-pipe.pico.sh}
      APP_EMAIL: ${PIPE_EMAIL:-hello@pico.sh}
    volumes:
      - ${PIPE_CADDYFILE}:/etc/caddy/Caddyfile
      - ./data/pipe-caddy/data:/data
      - ./data/pipe-caddy/config:/config
    ports:
      - "${PIPE_HTTPS_V4:-443}:443"
      - "${PIPE_HTTP_V4:-80}:80"
      - "${PIPE_HTTPS_V6:-[::1]:443}:443"
      - "${PIPE_HTTP_V6:-[::1]:80}:80"
    profiles:
      - pipe
      - caddy
      - all
  pipe-web:
    networks:
      pipe:
        aliases:
          - web
    env_file:
      - .env.prod
    volumes:
      - ./data/pipe-ssh/data:/app/ssh_data
  pipe-ssh:
    networks:
      pipe:
        aliases:
          - ssh
    env_file:
      - .env.prod
    volumes:
      - ./data/pipe-ssh/data:/app/ssh_data
    ports:
      - "${PIPE_SSH_V4:-22}:2222"
      - "${PIPE_SSH_V6:-[::1]:22}:2222"
  prose-caddy:
    image: ghcr.io/picosh/pico/caddy:latest
    restart: always
    networks:
      - prose
    env_file:
      - .env.prod
    environment:
      APP_DOMAIN: ${PROSE_DOMAIN:-prose.sh}
      APP_EMAIL: ${PROSE_EMAIL:-hello@pico.sh}
    volumes:
      - ${PROSE_CADDYFILE}:/etc/caddy/Caddyfile
      - ./data/prose-caddy/data:/data
      - ./data/prose-caddy/config:/config
    labels:
      pipemgr.enable: true
      pipemgr.filter: "http.log.access"
    depends_on:
      pipemgr:
        condition: service_healthy
    ports:
      - "${PROSE_HTTPS_V4:-443}:443"
      - "${PROSE_HTTP_V4:-80}:80"
      - "${PROSE_HTTPS_V6:-[::1]:443}:443"
      - "${PROSE_HTTP_V6:-[::1]:80}:80"
    profiles:
      - prose
      - caddy
      - all
  prose-web:
    dns: 1.1.1.1
    networks:
      prose:
        aliases:
          - web
    env_file:
      - .env.prod
    volumes:
      - ./data/prose-ssh/data:/app/ssh_data
      - ./data/storage:/storage
  prose-ssh:
    networks:
      prose:
        aliases:
          - ssh
    env_file:
      - .env.prod
    volumes:
      - ./data/prose-ssh/data:/app/ssh_data
      - ./data/storage:/storage
    ports:
      - "${PROSE_SSH_V4:-22}:2222"
      - "${PROSE_SSH_V6:-[::1]:22}:2222"
  pgs-caddy:
    image: ghcr.io/picosh/pico/caddy:latest
    restart: always
    networks:
      - pgs
    env_file:
      - .env.prod
    environment:
      APP_DOMAIN: ${PGS_DOMAIN:-pgs.sh}
      APP_EMAIL: ${PGS_EMAIL:-hello@pico.sh}
    volumes:
      - ${PGS_CADDYFILE}:/etc/caddy/Caddyfile
      - ./data/pgs-caddy/data:/data
      - ./data/pgs-caddy/config:/config
    ports:
      - "${PGS_HTTPS_V4:-443}:443"
      - "${PGS_HTTP_V4:-80}:80"
      - "${PGS_HTTPS_V6:-[::1]:443}:443"
      - "${PGS_HTTP_V6:-[::1]:80}:80"
    labels:
      pipemgr.enable: true
      pipemgr.filter: "http.log.access"
    depends_on:
      pipemgr:
        condition: service_healthy
    profiles:
      - pgs
      - caddy
      - all
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1024m"
  pgs-web:
    dns: 1.1.1.1
    networks:
      pgs:
        aliases:
          - web
    env_file:
      - .env.prod
    volumes:
      - ./data/storage:/storage
      - ./data/pgs-ssh/data:/app/ssh_data
    deploy:
      resources:
        limits:
          memory: 3g
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1024m"
  pgs-ssh:
    networks:
      pgs:
        aliases:
          - ssh
    env_file:
      - .env.prod
    volumes:
      - ./data/storage:/storage
      - ./data/pgs-ssh/data:/app/ssh_data
      - ./data/tmp:/tmp
    ports:
      - "${PGS_SSH_V4:-22}:2222"
      - "${PGS_SSH_V6:-[::1]:22}:2222"
    deploy:
      resources:
        limits:
          memory: 3g
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1024m"
  feeds-caddy:
    image: ghcr.io/picosh/pico/caddy:latest
    restart: always
    networks:
      - feeds
    env_file:
      - .env.prod
    environment:
      APP_DOMAIN: ${FEEDS_DOMAIN:-feeds.pico.sh}
      APP_EMAIL: ${FEEDS_EMAIL:-hello@pico.sh}
    volumes:
      - ${FEEDS_CADDYFILE}:/etc/caddy/Caddyfile
      - ./data/feeds-caddy/data:/data
      - ./data/feeds-caddy/config:/config
    ports:
      - "${FEEDS_HTTPS_V4:-443}:443"
      - "${FEEDS_HTTP_V4:-80}:80"
      - "${FEEDS_HTTPS_V6:-[::1]:443}:443"
      - "${FEEDS_HTTP_V6:-[::1]:80}:80"
    profiles:
      - feeds
      - caddy
      - all
  feeds-web:
    networks:
      feeds:
        aliases:
          - web
    env_file:
      - .env.prod
    volumes:
      - ./data/feeds-ssh/data:/app/ssh_data
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1024m"
  feeds-ssh:
    networks:
      feeds:
        aliases:
          - ssh
    env_file:
      - .env.prod
    volumes:
      - ./data/feeds-ssh/data:/app/ssh_data
    ports:
      - "${FEEDS_SSH_V4:-22}:2222"
      - "${FEEDS_SSH_V6:-[::1]:22}:2222"
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1024m"
  pico-caddy:
    image: ghcr.io/picosh/pico/caddy:latest
    restart: always
    networks:
      - pico
    env_file:
      - .env.prod
    environment:
      APP_DOMAIN: ${PICO_DOMAIN:-pico.sh}
      APP_EMAIL: ${PICO_EMAIL:-hello@pico.sh}
    volumes:
      - ${PICO_CADDYFILE}:/etc/caddy/Caddyfile
      - ./data/pico-caddy/data:/data
      - ./data/pico-caddy/config:/config
    ports:
      - "${PICO_HTTPS_V4:-443}:443"
      - "${PICO_HTTP_V4:-80}:80"
      - "${PICO_HTTPS_V6:-[::1]:443}:443"
      - "${PICO_HTTP_V6:-[::1]:80}:80"
    profiles:
      - pico
      - caddy
      - all
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1024m"
  pico-ssh:
    networks:
      pico:
        aliases:
          - ssh
    env_file:
      - .env.prod
    volumes:
      - ./data/pico-ssh/data:/app/ssh_data
    ports:
      - "${PICO_SSH_V4:-22}:2222"
      - "${PICO_SSH_V6:-[::1]:22}:2222"

networks:
  default:
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: "172.101.0.0/24"
        - subnet: fd00:dead:beef:101::/112
  prose:
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.name: prose
    ipam:
      config:
        - subnet: 172.18.0.0/16
        - subnet: fd00:dead:beef:18::/112
  pastes:
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.name: pastes
    ipam:
      config:
        - subnet: 172.19.0.0/16
        - subnet: fd00:dead:beef:19::/112
  feeds:
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.name: feeds
    ipam:
      config:
        - subnet: 172.22.0.0/16
        - subnet: fd00:dead:beef:22::/112
  pgs:
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.name: pgs
    ipam:
      config:
        - subnet: 172.23.0.0/16
        - subnet: fd00:dead:beef:23::/112
  pico:
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.name: pico
    ipam:
      config:
        - subnet: 172.25.0.0/16
        - subnet: fd00:dead:beef:25::/112
  pipe:
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.name: pipe
    ipam:
      config:
        - subnet: 172.27.0.0/16
        - subnet: fd00:dead:beef:27::/112
