services:
  postgres:
    env_file:
      - .env.example
    ports:
      - "5432:5432"
    command: -c log_statement=all -c log_destination=stderr
  minio:
    env_file:
      - .env.example
    ports:
      - "9000:9000"
      - "9001:9001"
  imgproxy:
    env_file:
      - .env.example
    volumes:
      - ./data/storage:/storage
    ports:
      - "8080:8080"
  pastes-web:
    build:
      args:
        APP: pastes
      target: release-web
    env_file:
      - .env.example
    ports:
      - "3001:3000"
  pastes-ssh:
    build:
      args:
        APP: pastes
      target: release-ssh
    env_file:
      - .env.example
    volumes:
      - ./data/pastes-ssh/data:/app/ssh_data
    ports:
      - "2221:2222"
  pipe-web:
    build:
      args:
        APP: pipe
      target: release-web
    env_file:
      - .env.example
    ports:
      - "3001:3000"
  pipe-ssh:
    build:
      args:
        APP: pipe
      target: release-ssh
    env_file:
      - .env.example
    volumes:
      - ./data/pipe-ssh/data:/app/ssh_data
    ports:
      - "2221:2222"
  prose-web:
    build:
      args:
        APP: prose
      target: release-web
    env_file:
      - .env.example
    ports:
      - "3002:3000"
    volumes:
      - ./data/storage:/storage
  prose-ssh:
    build:
      args:
        APP: prose
      target: release-ssh
    env_file:
      - .env.example
    volumes:
      - ./data/storage:/storage
      - ./data/prose-ssh/data:/app/ssh_data
    ports:
      - "2222:2222"
  pgs-web:
    build:
      args:
        APP: pgs
      target: release-web
    env_file:
      - .env.example
    volumes:
      - ./data/storage/data:/app/.storage
    ports:
      - "3004:3000"
  pgs-ssh:
    build:
      args:
        APP: pgs
      target: release-ssh
    env_file:
      - .env.example
    volumes:
      - ./data/storage/data:/app/.storage
      - ./data/pgs-ssh/data:/app/ssh_data
    ports:
      - "2224:2222"
  feeds-web:
    build:
      args:
        APP: feeds
      target: release-web
    env_file:
      - .env.example
    ports:
      - "3005:3000"
  feeds-ssh:
    build:
      args:
        APP: feeds
      target: release-ssh
    env_file:
      - .env.example
    volumes:
      - ./data/feeds-ssh/data:/app/ssh_data
    ports:
      - "2225:2222"
  pico-ssh:
    build:
      args:
        APP: pico
      target: release-ssh
    env_file:
      - .env.example
    volumes:
      - ./data/pico-ssh/data:/app/ssh_data
    ports:
      - "2226:2222"
  auth-web:
    build:
      args:
        APP: auth
      target: release-web
    env_file:
      - .env.example
    ports:
      - "3006:3000"
  bouncer:
    build:
      context: bouncer/
    env_file:
      - .env.example
    volumes:
      - ./data/bouncer:/app/db
      - ./data/certs:/certs
    ports:
      - "6697:6697"
      - "8081:8080"
