{
	on_demand_tls {
		ask http://web:3000/check
		interval 1m
		burst 10
	}
	servers {
		metrics
		trusted_proxies static 0.0.0.0/0
	}
	cache {
		ttl 300s
		max_cacheable_body_bytes 1000000
		otter
		api {
			souin
		}
	}
}

*.{$APP_DOMAIN}, {$APP_DOMAIN} {
	reverse_proxy web:3000
	log {
		format append {
			server_id {$APP_DOMAIN}
		}
	}
	tls {$APP_EMAIL} {
		dns cloudflare {$CF_API_TOKEN}
		resolvers 1.1.1.1
	}
	route {
		@souinApi path /souin-api/*
		basic_auth @souinApi {
			testuser $2a$14$i1G0lil5qti7qahb4.Kte.wP/3O8uaStduzhBBtuDUZhMJeSjxbqm
		}
		cache {
			regex {
				exclude /check
			}
		}
		reverse_proxy web:3000
	}

	encode zstd gzip

	header {
		# disable FLoC tracking
		?Permissions-Policy interest-cohort=()

		# enable HSTS
		?Strict-Transport-Security max-age=31536000;

		# disable clients from sniffing the media type
		?X-Content-Type-Options nosniff

		# clickjacking protection
		?X-Frame-Options DENY

		# keep referrer data off of HTTP connections
		?Referrer-Policy no-referrer-when-downgrade

		?X-XSS-Protection "1; mode=block"
	}

	@caddymetrics {
		host {$APP_DOMAIN}
		path /_caddy/metrics
	}

	metrics @caddymetrics {
		disable_openmetrics
	}

	@appmetrics {
		host {$APP_DOMAIN}
		path /_app/metrics
	}

	handle @appmetrics {
		rewrite * /metrics
		reverse_proxy ssh:9222
	}
}

monitoring.{$MONITORING_APP_DOMAIN}, prometheus.{$MONITORING_APP_DOMAIN}, grafana.{$MONITORING_APP_DOMAIN} {
	@grafana {
		host grafana.{$MONITORING_APP_DOMAIN}
	}

	@prometheus {
		host prometheus.{$MONITORING_APP_DOMAIN}
	}

	tls {$MONITORING_APP_EMAIL} {
		dns cloudflare {$CF_API_TOKEN}
		resolvers 1.1.1.1
	}

	encode zstd gzip

	reverse_proxy @grafana grafana:3000

	basicauth @prometheus {
		eric JDJhJDE0JDdPOXhoNUdhSmNVNDl6UWpmeTE0cWVkLjRwcUNJUnc0dVQ4MTZNSmVaNjA1TlptaVZYY1hh
		antonio JDJhJDE0JHI5dkVtMW0vcGxIb011OG4vME5HOU91c3U2VjM2QTZiWVpUeXdSbEg3VUtNZVdhN3BRazFH
		bot JDJhJDE0JFVsRlNHSDlJbFhDeUd0NldRR2JkcGVFYUJtWGluTHZDVlc5L3QwNWNwWUMuODRlcXZNZHpT
	}
	reverse_proxy @prometheus prometheus:9090

	@caddymetrics {
		host monitoring.{$MONITORING_APP_DOMAIN}
		path /_caddy/metrics
	}

	metrics @caddymetrics {
		disable_openmetrics
	}
}

:443 {
	reverse_proxy web:3000
	log {
		format append {
			server_id {$APP_DOMAIN}
		}
	}
	tls {$APP_EMAIL} {
		on_demand
	}
	encode zstd gzip
}
