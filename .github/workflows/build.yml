name: Test and Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  PLATFORMS: |
    linux/amd64
    linux/arm64

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
    - name: Install package
      run: |
        sudo apt-get -y install libwebp-dev
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Lint the codebase
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: -E goimports -E godot --timeout 10m
    - name: Run tests
      run: |
        go test -v ./... -cover -race -coverprofile=coverage.out
        go tool cover -func=coverage.out -o=coverage.out
  build:
    runs-on: ubuntu-22.04
    needs: test
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Run docker build for lists
      uses: ./.github/actions/build
      with:
        app: lists
        platforms: ${{ env.PLATFORMS }}
        registry: ${{ env.REGISTRY }}
    - name: Run docker build for prose
      uses: ./.github/actions/build
      with:
        app: prose
        platforms: ${{ env.PLATFORMS }}
        registry: ${{ env.REGISTRY }}
    - name: Run docker build for pastes
      uses: ./.github/actions/build
      with:
        app: pastes
        platforms: ${{ env.PLATFORMS }}
        registry: ${{ env.REGISTRY }}
    - name: Run docker build for imgs
      uses: ./.github/actions/build
      with:
        app: imgs
        platforms: ${{ env.PLATFORMS }}
        registry: ${{ env.REGISTRY }}
    - name: Run docker build for imgs
      uses: ./.github/actions/build
      with:
        app: feeds
        platforms: ${{ env.PLATFORMS }}
        registry: ${{ env.REGISTRY }}
  build-caddy:
    runs-on: ubuntu-22.04
    needs: test
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Collect image metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/caddy
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./caddy
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ env.PLATFORMS }}
